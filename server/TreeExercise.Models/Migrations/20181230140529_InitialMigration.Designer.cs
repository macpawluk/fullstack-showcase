// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreeExercise.Models;

namespace TreeExercise.Models.Migrations
{
    [DbContext(typeof(ContactsContext))]
    [Migration("20181230140529_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TreeExercise.Models.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new { Id = 1, FirstName = "Oliver", LastName = "-" },
                        new { Id = 2, FirstName = "Amelia", LastName = "-" },
                        new { Id = 3, FirstName = "Mike", LastName = "-" },
                        new { Id = 4, FirstName = "Jack", LastName = "-" },
                        new { Id = 5, FirstName = "Harry", LastName = "-" },
                        new { Id = 6, FirstName = "Jacob", LastName = "-" },
                        new { Id = 7, FirstName = "Charlie", LastName = "-" },
                        new { Id = 8, FirstName = "Olivia", LastName = "-" },
                        new { Id = 9, FirstName = "Emily", LastName = "-" },
                        new { Id = 10, FirstName = "Thomas", LastName = "-" },
                        new { Id = 11, FirstName = "Sophie", LastName = "-" },
                        new { Id = 12, FirstName = "Anthony", LastName = "-" },
                        new { Id = 13, FirstName = "Jessica", LastName = "-" },
                        new { Id = 14, FirstName = "James", LastName = "-" },
                        new { Id = 15, FirstName = "William", LastName = "-" },
                        new { Id = 16, FirstName = "Lily", LastName = "-" },
                        new { Id = 17, FirstName = "Megan", LastName = "-" },
                        new { Id = 18, FirstName = "Kyle", LastName = "-" },
                        new { Id = 19, FirstName = "Samantha", LastName = "-" },
                        new { Id = 20, FirstName = "Margaret", LastName = "-" },
                        new { Id = 21, FirstName = "David", LastName = "-" },
                        new { Id = 22, FirstName = "Freddy", LastName = "-" }
                    );
                });

            modelBuilder.Entity("TreeExercise.Models.Entities.PersonContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Person1Id");

                    b.Property<int>("Person2Id");

                    b.HasKey("Id");

                    b.HasIndex("Person2Id");

                    b.HasIndex("Person1Id", "Person2Id")
                        .IsUnique();

                    b.ToTable("PersonContacts");

                    b.HasData(
                        new { Id = 1, Person1Id = 1, Person2Id = 2 },
                        new { Id = 76, Person1Id = 1, Person2Id = 3 },
                        new { Id = 2, Person1Id = 2, Person2Id = 1 },
                        new { Id = 3, Person1Id = 2, Person2Id = 3 },
                        new { Id = 4, Person1Id = 3, Person2Id = 2 },
                        new { Id = 5, Person1Id = 3, Person2Id = 12 },
                        new { Id = 6, Person1Id = 3, Person2Id = 13 },
                        new { Id = 7, Person1Id = 3, Person2Id = 11 },
                        new { Id = 8, Person1Id = 3, Person2Id = 10 },
                        new { Id = 9, Person1Id = 3, Person2Id = 9 },
                        new { Id = 10, Person1Id = 3, Person2Id = 8 },
                        new { Id = 11, Person1Id = 3, Person2Id = 5 },
                        new { Id = 12, Person1Id = 3, Person2Id = 4 },
                        new { Id = 77, Person1Id = 3, Person2Id = 1 },
                        new { Id = 13, Person1Id = 12, Person2Id = 3 },
                        new { Id = 14, Person1Id = 12, Person2Id = 11 },
                        new { Id = 15, Person1Id = 12, Person2Id = 13 },
                        new { Id = 16, Person1Id = 12, Person2Id = 14 },
                        new { Id = 17, Person1Id = 12, Person2Id = 15 },
                        new { Id = 18, Person1Id = 11, Person2Id = 3 },
                        new { Id = 19, Person1Id = 11, Person2Id = 5 },
                        new { Id = 20, Person1Id = 11, Person2Id = 12 },
                        new { Id = 21, Person1Id = 11, Person2Id = 13 },
                        new { Id = 22, Person1Id = 11, Person2Id = 16 },
                        new { Id = 23, Person1Id = 11, Person2Id = 17 },
                        new { Id = 24, Person1Id = 13, Person2Id = 12 },
                        new { Id = 25, Person1Id = 13, Person2Id = 11 },
                        new { Id = 26, Person1Id = 13, Person2Id = 3 },
                        new { Id = 27, Person1Id = 13, Person2Id = 19 },
                        new { Id = 28, Person1Id = 13, Person2Id = 20 },
                        new { Id = 29, Person1Id = 19, Person2Id = 13 },
                        new { Id = 30, Person1Id = 19, Person2Id = 20 },
                        new { Id = 31, Person1Id = 20, Person2Id = 13 },
                        new { Id = 32, Person1Id = 20, Person2Id = 19 },
                        new { Id = 33, Person1Id = 4, Person2Id = 3 },
                        new { Id = 34, Person1Id = 4, Person2Id = 7 },
                        new { Id = 36, Person1Id = 4, Person2Id = 5 },
                        new { Id = 37, Person1Id = 5, Person2Id = 4 },
                        new { Id = 38, Person1Id = 5, Person2Id = 7 },
                        new { Id = 39, Person1Id = 5, Person2Id = 3 },
                        new { Id = 40, Person1Id = 5, Person2Id = 11 },
                        new { Id = 41, Person1Id = 5, Person2Id = 8 },
                        new { Id = 42, Person1Id = 5, Person2Id = 9 },
                        new { Id = 43, Person1Id = 7, Person2Id = 4 },
                        new { Id = 44, Person1Id = 7, Person2Id = 5 },
                        new { Id = 45, Person1Id = 8, Person2Id = 3 },
                        new { Id = 46, Person1Id = 8, Person2Id = 5 },
                        new { Id = 47, Person1Id = 8, Person2Id = 6 },
                        new { Id = 48, Person1Id = 8, Person2Id = 9 },
                        new { Id = 49, Person1Id = 8, Person2Id = 10 },
                        new { Id = 50, Person1Id = 6, Person2Id = 8 },
                        new { Id = 51, Person1Id = 6, Person2Id = 9 },
                        new { Id = 52, Person1Id = 9, Person2Id = 3 },
                        new { Id = 53, Person1Id = 9, Person2Id = 8 },
                        new { Id = 54, Person1Id = 9, Person2Id = 6 },
                        new { Id = 55, Person1Id = 9, Person2Id = 5 },
                        new { Id = 56, Person1Id = 10, Person2Id = 3 },
                        new { Id = 57, Person1Id = 10, Person2Id = 8 },
                        new { Id = 58, Person1Id = 14, Person2Id = 12 },
                        new { Id = 59, Person1Id = 14, Person2Id = 15 },
                        new { Id = 60, Person1Id = 14, Person2Id = 16 },
                        new { Id = 61, Person1Id = 15, Person2Id = 12 },
                        new { Id = 62, Person1Id = 15, Person2Id = 14 },
                        new { Id = 63, Person1Id = 15, Person2Id = 17 },
                        new { Id = 64, Person1Id = 15, Person2Id = 18 },
                        new { Id = 65, Person1Id = 16, Person2Id = 11 },
                        new { Id = 66, Person1Id = 16, Person2Id = 14 },
                        new { Id = 67, Person1Id = 16, Person2Id = 17 },
                        new { Id = 68, Person1Id = 17, Person2Id = 11 },
                        new { Id = 69, Person1Id = 17, Person2Id = 15 },
                        new { Id = 70, Person1Id = 17, Person2Id = 16 },
                        new { Id = 71, Person1Id = 17, Person2Id = 18 },
                        new { Id = 72, Person1Id = 18, Person2Id = 17 },
                        new { Id = 73, Person1Id = 18, Person2Id = 15 },
                        new { Id = 74, Person1Id = 21, Person2Id = 22 },
                        new { Id = 75, Person1Id = 22, Person2Id = 21 }
                    );
                });

            modelBuilder.Entity("TreeExercise.Models.Entities.PersonContact", b =>
                {
                    b.HasOne("TreeExercise.Models.Entities.Person", "Person1")
                        .WithMany("Contacts")
                        .HasForeignKey("Person1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TreeExercise.Models.Entities.Person", "Person2")
                        .WithMany()
                        .HasForeignKey("Person2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
